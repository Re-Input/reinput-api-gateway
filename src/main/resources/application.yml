server:
  port: 8000

spring:
  application:
    name: reinput-api-gateway
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: false
      routes:
        # Swagger Routes
        - id: auth-swagger
          uri: lb://REINPUT-AUTH-SERVICE
          predicates:
            - Path=/member/swagger-ui/**, /member/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: content-swagger
          uri: lb://REINPUT-CONTENT-SERVICE
          predicates:
            - Path=/insight/swagger-ui/**, /insight/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: notification-swagger
          uri: lb://REINPUT-NOTIFICATION-SERVICE
          predicates:
            - Path=/reminder/swagger-ui/**, /reminder/v3/api-docs/**
          filters:
            - StripPrefix=1

        - id: workspace-swagger
          uri: lb://REINPUT-WORKSPACE-SERVICE
          predicates:
            - Path=/folder/swagger-ui/**, /folder/v3/api-docs/**
          filters:
            - StripPrefix=1

        # Auth Routes (No JWT Required)
        - id: auth-routes
          uri: lb://REINPUT-AUTH-SERVICE
          predicates:
            - Path=/auth/**

        - id: oauth-routes
          uri: lb://REINPUT-AUTH-SERVICE
          predicates:
            - Path=/oauth2/**

        # Service Routes (JWT Required)
        - id: member-service
          uri: lb://REINPUT-AUTH-SERVICE
          predicates:
            - Path=/member/**
          filters:
            - name: JwtAuthenticationFilter

        - id: content-service
          uri: lb://REINPUT-CONTENT-SERVICE
          predicates:
            - Path=/insight/**
          filters:
            - name: JwtAuthenticationFilter

        - id: notification-service
          uri: lb://REINPUT-NOTIFICATION-SERVICE
          predicates:
            - Path=/reminder/**
          filters:
            - name: JwtAuthenticationFilter

        - id: workspace-service
          uri: lb://REINPUT-WORKSPACE-SERVICE
          predicates:
            - Path=/folder/**
          filters:
            - name: JwtAuthenticationFilter

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-server:8761/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

jwt:
  secret: CsVkVMKKUXwFbXX1ZjEOktRHXNWRoDy5sDH8t/MIO8qkQBZGF/RiX48w65FBo/11xnk45jW8TizlzLNlnC9ANQ==

management:
  endpoints:
    web:
      exposure:
        include: "*"